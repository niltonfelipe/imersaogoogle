üí° Recapitula√ß√£o da Aula Anterior e o Desafio Final

A aula anterior incluiu conceitos b√°sicos de Python.
No final da aula, foi anunciado o desafio para criar o melhor projeto, oferecendo pr√™mios como uma bolsa de 100% na FIAP e acesso ao plano Pro da Alura.
Para participar, todos os n√≠veis de conhecimento s√£o bem-vindos, desde programadores iniciantes at√© especialistas.

üîë Obten√ß√£o e Configura√ß√£o da API Key
API Key: Uma chave de acesso que autentica os usu√°rios na API Gemini.
Como Criar: Acesse o Google AI Studio, clique em "Get API Key" e crie uma chave no Google Cloud.
Cuidados: N√£o compartilhe a chave publicamente, e remova-a se necess√°rio.

üîß Configurando o Ambiente no Google Colab
Google Colab: Um ambiente de notebooks Python online gratuito, ideal para a experimenta√ß√£o de IA.
Gemini API SDK: Instale a biblioteca "google-generativeai" com o comando pip install -q -U google-generativeai.
Notebook Estruturado: Permite inserir coment√°rios e gr√°ficos para contar hist√≥rias e insights.

üöÄ Cria√ß√£o do Chatbot
Inicializando o Modelo Gemini
Escolha a vers√£o desejada do modelo, por exemplo, gemini-1.0-pro.
Liste os modelos dispon√≠veis usando genai.list_models().
Configura√ß√µes de Seguran√ßa e Gera√ß√£o
Configure os filtros de seguran√ßa, como harassment, hate e dangerous.
Par√¢metros como temperature, candidate_count, top_k e top_p controlam a gera√ß√£o de conte√∫do.
Gerando Conte√∫do
Use model.generate_content() com prompts personalizados para obter respostas do chatbot.

üéØ Dicas e Insights
Prompt Engineering: Experimente diferentes prompts para ver varia√ß√µes de respostas.
Comunidade: Participe do Discord da Alura para compartilhar ideias e tirar d√∫vidas.
Google Cloud Innovators: Explore a comunidade para aprender mais sobre os produtos Google Cloud.

Prompt e Resposta: Uma vari√°vel prompt √© usada para capturar a entrada do usu√°rio via input(), e o m√©todo send_message do objeto chat √© utilizado para enviar mensagens e obter respostas.
Loop While: O chatbot √© envolvido em um loop while, permitindo intera√ß√µes cont√≠nuas at√© que a palavra "fim" seja digitada para finalizar a conversa.

üí¨ Funcionalidades Avan√ßadas do Chatbot
Hist√≥rico de Conversa: O chat.history armazena todas as intera√ß√µes para manter o contexto e fornecer respostas mais inteligentes.
Exibi√ß√£o Bonita com Markdown: O uso de markdown melhora a apar√™ncia das respostas, formatando-as com t√≠tulos e negrito.

üéØ Desafio Final
Pr√™mio Incr√≠vel: A primeira coloca√ß√£o ganha uma bolsa de 100% na FIAP, acesso ao plano Pro da Alura, e convites para a IA Conference Brasil 2024.
Objetivo do Projeto: Criar um projeto que utilize a Gemini API, alinhado com os conceitos abordados durante a imers√£o.
Regras e Crit√©rios:
Deve-se usar a Gemini API.
Criatividade, utilidade, efic√°cia e apresenta√ß√£o ser√£o os principais crit√©rios de avalia√ß√£o.
√âtica: Projetos que promovam discurso de √≥dio ou viol√™ncia ser√£o desclassificados.

üìã Passos para Subir o Projeto no GitHub
Cria√ß√£o do Reposit√≥rio: Fa√ßa login no GitHub, clique em "New" e crie um reposit√≥rio com um arquivo README.md para facilitar a conex√£o com o Google Colab.
Salvar uma C√≥pia no GitHub: No Google Colab, clique em "Arquivo > Salvar uma c√≥pia no GitHub", escolha o reposit√≥rio e a branch.
Incluir Vari√°veis Secretas: Para proteger sua API Key, use from google.colab import userdata e armazene-a como uma chave secreta.

üìù Exemplo de Perguntas Explorat√≥rias
Perguntas Explorat√≥rias
Quais s√£o os passos detalhados para obter a API Key e configurar o Google Colab?
Quais s√£o os diferentes modelos dispon√≠veis na Gemini API e suas funcionalidades?
Quais s√£o os desafios comuns ao criar um chatbot e como evit√°-los?
Como garantir a seguran√ßa da API Key ao compartilhar projetos?
Qual √© a estrutura recomendada para organizar um projeto no GitHub?
Quais s√£o os crit√©rios detalhados de avalia√ß√£o do desafio?
